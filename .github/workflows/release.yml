name: Release
on:
  workflow_dispatch:
  release:
    types:
      - published

env:
  CHART_VERSION: 1.2.1
  NAMESPACE: microservices

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      COMPOSER_AUTH: ${{ secrets.ENV_COMPOSER_AUTH }}
      MYSQL_DATABASE: haute-cuisine-testing
      ECR_REGISTRY: 597031446072.dkr.ecr.eu-central-1.amazonaws.com
      ECR_REPOSITORY: service-authentication
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: Set Version
        run: |
          dotnet-gitversion -output buildserver -verbosity Quiet
          echo "Verison:"
          cat $GITHUB_ENV
      - name: Prepare
        id: prep
        run: |
          build_id=$GitVersion_FullSemVer
          echo "::set-output name=VERSION::${build_id}"
      - name: Build and push the final image
        run: |
          set -e
          echo "${{ steps.prep.outputs.VERSION }}"
  deploy_staging:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: app
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: Set Version
        run: |
          dotnet-gitversion -output buildserver -verbosity Quiet
          echo "Verison:"
          cat $GITHUB_ENV
        working-directory: app
      - uses: actions/checkout@v2
        with:
          repository: marvinkurock/k8s
          path: k8s
          token: ${{ secrets.API_GITHUB_TOKEN }}
      - run: |
          ls -la
          tree
      - name: Commit Version
        working-directory: k8s
        env:
          GH_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
        run: |
          gh pr list
          git config user.email deployment@tqgg.de
          git config user.name deployment-bot
          git checkout -b prerelease/$GitVersion_FullSemVer
          echo $GitVersion_FullSemVer > Version.yaml
          git add .
          git commit -m "Prerelease: $GitVersion_FullSemVer"
          git push --set-upstream origin prerelease/$GitVersion_FullSemVer
          gh pr create --title "[Prerelease] Deployment: $GitVersion_FullSemVer"

  deploy_prod:
    needs: deploy_staging
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: Set Version
        run: |
          dotnet-gitversion -output buildserver -verbosity Quiet
          echo "Verison:"
          cat $GITHUB_ENV
      - name: release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          release_name: ${{ env.GitVersion_MajorMinorPatch }}
          tag_name: ${{ env.GitVersion_MajorMinorPatch }}
          body_path: readme.md
