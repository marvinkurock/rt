name: Release
on:
  workflow_dispatch:

env:
  CHART_VERSION: 1.2.1
  NAMESPACE: microservices
  STAGING_RELEASE_FILE: apps/staging/microservices/authentication/release.yaml
  PROD_RELEASE_FILE: apps/production/microservices/authentication/release.yaml

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: The-Quality-Group/service-authentication
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
      - uses: actions/checkout@v2
        with:
          repository: marvinkurock/ga
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
          path: .github/actions
      - run: |
          tree -L 2
  # create_release_candidate:
  #   needs: test-and-build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/checkout@v2
  #       with:
  #         repository: marvinkurock/ga
  #         token: ${{ secrets.API_GITHUB_TOKEN }}
  #         path: .github/actions
  #     - uses: ./.github/actions/release/
  #       with:
  #         K8S_REPO: marvinkurock/k8s
  #         API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
  #         RELEASE_FILE: ${{ env.STAGING_RELEASE_FILE }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # create_release:
  #   needs: create_release_candidate
  #   environment: Production
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/checkout@v2
  #       with:
  #         repository: marvinkurock/ga
  #         token: ${{ secrets.API_GITHUB_TOKEN }}
  #         path: .github/actions
  #     - uses: ./.github/actions/release/
  #       with:
  #         K8S_REPO: marvinkurock/k8s
  #         IS_PRERELEASE: "false"
  #         API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
  #         RELEASE_FILE: ${{ env.PROD_RELEASE_FILE }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
